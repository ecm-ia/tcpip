using System;
using System.Net;
using System.Net.Sockets;
using System.Text;

namespace TcpIpListener
{
    class Program
    {
        static void Main(string[] args)
        {
            // Set the IP address and port number for the listener
            IPAddress ipAddress = IPAddress.Parse("127.0.0.1");
            int port = 1234;

            // Create a new TcpListener with the specified IP address and port
            TcpListener listener = new TcpListener(ipAddress, port);

            try
            {
                // Start listening for incoming connections
                listener.Start();
                Console.WriteLine("Listening for connections...");

                // Wait for a client to connect
                TcpClient client = listener.AcceptTcpClient();

                // Get the stream for the client connection
                NetworkStream stream = client.GetStream();

                // Create a new byte array to hold the data from the client
                byte[] buffer = new byte[4096];

                // Read data from the client
                int bytesRead = stream.Read(buffer, 0, buffer.Length);

                // Convert the byte array to a string
                string data = Encoding.ASCII.GetString(buffer, 0, bytesRead);
                Console.WriteLine("Received data: " + data);

                // Send a response back to the client
                string response = "Hello, " + data + "!";
                byte[] responseBytes = Encoding.ASCII.GetBytes(response);
                stream.Write(responseBytes, 0, responseBytes.Length);

                // Close the stream and client connection
                stream.Close();
                client.Close();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error: " + ex.Message);
            }
            finally
            {
                // Clean up and close the listener
                listener.Stop();
                Console.WriteLine("Listener stopped.");
            }
        }
    }
}
